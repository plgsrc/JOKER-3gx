#include "types.h"
#include "CTRPluginFramework.hpp"
#include "Helpers/OSDManager.hpp"

namespace CTRPluginFramework
{
	static int action_number = 0;
	int* g_location = (int*)0x33099F84;

	// ---------------------------------------------------------------
	// アクション変更8byte
	// ---------------------------------------------------------------
	void set_action_8(u8 act_8)
	{
		if (*g_location == -1)
			Process::Write8(0x33099FE5, act_8); // 室外
		else
			Process::Write8(0x3309A111, act_8); // 室内
	}


	// ---------------------------------------------------------------
	// アクション変更32byte
	// ---------------------------------------------------------------
	void set_action_32(u32 act_32)
	{
		if (*g_location == -1)
			Process::Write32(0x33099FE4, act_32); // 室外
		else
			Process::Write32(0x3309A110, act_32); // 室内
	}


	// ---------------------------------------------------------------
	// アクション変更8byte 室内使用禁止
	// ---------------------------------------------------------------
	void set_action_8_not_indoor(u8 act_8_not_in)
	{
		if (*g_location == -1)
			Process::Write8(0x33099FE5, act_8_not_in);	// 室外
		else
			(MessageBox("室内では実行できません"))();		// 室内
	}


	// ---------------------------------------------------------------
	// アクション変更32byte 室内使用禁止
	// ---------------------------------------------------------------
	void set_action_32_not_indoor(u32 act_32_not_in)
	{
		if (*g_location == -1)
			Process::Write32(0x33099FE4, act_32_not_in);	// 室外
		else
			(MessageBox("室内では実行できません"))();		// 室内
	}
	
	// ---------------------------------------------------------------
	// 前転の時の汗の状態
	// ---------------------------------------------------------------
	void sweat( u32 sweat )
	{
		if ( get12c() == 0 )
			Process::Write32( 0x33099FC0, sweat ); // 室外
		else
			Process::Write32( 0x3309A0EC, sweat ); // 室内
	}
	
	
	// ---------------------------------------------------------------
	// 空気椅子
	// ---------------------------------------------------------------
	void Action1( void )
	{
		set_action_8( 0xAA ); // 	アクション実行
	}
	
	// ---------------------------------------------------------------
	// 前転
	// ---------------------------------------------------------------
	void Action2( void )
	{
		set_action_8( 0x60 );	//  アクション実行
		sweat( 0x00000000 );	//	汗かかない
	}
	
	// ---------------------------------------------------------------
	// 尻もち
	// ---------------------------------------------------------------
	void Action3( void )
	{
		set_action_8( 0xB3 ); // 	アクション実行
	}
	
	// ---------------------------------------------------------------
	// 黒くなって地面から出る
	// ---------------------------------------------------------------
	void Action4( void )
	{
		set_action_8( 0x22 ); // アクション実行
	}
	
	// ---------------------------------------------------------------
	// アイテムを捕まえた
	// ---------------------------------------------------------------
	void Action5( void )
	{
		set_action_8( 0x23 ); // アクション実行
	}
	
	// ---------------------------------------------------------------
	// クラゲ回避
	// ---------------------------------------------------------------
	void Action6( void )
	{
		set_action_8( 0x27 ); // アクション実行
	}
	
	// ---------------------------------------------------------------
	// リアクション四連発
	// ---------------------------------------------------------------
	void Action7( void )
	{
		set_action_8( 0xD6 ); // アクション実行
	}
	
	// ---------------------------------------------------------------
	// 赤バラ表示
	// ---------------------------------------------------------------
	void Action8( void )
	{
		set_action_8_not_indoor( 0x72 ); // アクション実行
	}
	
	// ---------------------------------------------------------------
	// 綿毛を吹く
	// ---------------------------------------------------------------
	void Action9( void )
	{
		set_action_8( 0x90 ); // アクション実行
	}
	
	// ---------------------------------------------------------------
	// 頭がピッカーん
	// ---------------------------------------------------------------
	void Action10( void )
	{
		set_action_8( 0xC0 ); // アクション実行
	}
	
	// ---------------------------------------------------------------
	// かっぺいのボートに立って乗る
	// ---------------------------------------------------------------
	void Action12( void )
	{
		set_action_32_not_indoor( 0xBDBCBD00 ); // 	アクション実行
	}
	
	// ---------------------------------------------------------------
	// 気絶
	// ---------------------------------------------------------------
	void Action14( void )
	{
		// 外
		if ( get12c() == 0 )
		{
			Process::Write32( 0x33099FE4, 0x066B0600 );
			Process::Write32( 0x33099FB4, 0x00038001 );
			Process::Write32( 0x33099FB0, 0x00000036 );
		}
		else // 室内
		{
			Process::Write32( 0x3309A110, 0x066B0600 );
			Process::Write32( 0x3309A0E0, 0x00038001 );
			Process::Write32( 0x3309A0DC, 0x00000036 );
		}
	}
	
	// ---------------------------------------------------------------
	// 受け取る
	// ---------------------------------------------------------------
	void Action15( void )
	{
		set_action_32( 0x060F7500 ); // 	アクション実行
	}
	
	// ---------------------------------------------------------------
	// かっぺいのボートに座って乗る
	// ---------------------------------------------------------------
	void Action16( void )
	{
		set_action_32_not_indoor( 0x06BBBC00 ); // 	アクション実行
	}
	
	// ---------------------------------------------------------------
	// 泳ぐ
	// ---------------------------------------------------------------
	void Action18( void )
	{
		set_action_32_not_indoor( 0x060D1D00 ); // 	アクション実行
	}
	
	// ---------------------------------------------------------------
	// ウィンドウ
	// ---------------------------------------------------------------
	void Action19( void )
	{
		set_action_32_not_indoor( 0x1F1F3600 ); // 	アクション実行
	}
	
	// ---------------------------------------------------------------
	// 地中深くまで沈む
	// ---------------------------------------------------------------
	void Action20( void )
	{
		set_action_32_not_indoor( 0x06061C00 ); // 	アクション実行
	}
	
	// ---------------------------------------------------------------
	// 止まると動きがフリーズ
	// ---------------------------------------------------------------
	void Action22( void )
	{
		set_action_32_not_indoor( 0x06060D00 ); // 	アクション実行
	}
	
	// ----------------------------------------------------------------
	// よろける
	// ---------------------------------------------------------------
	void Action23( void )
	{
		set_action_32_not_indoor( 0x7C7C7F00 ); // 	アクション実行
	}
	
	// ---------------------------------------------------------------
	// 釣り竿を引き戻す
	// ---------------------------------------------------------------
	void Action24( void )
	{
		set_action_32_not_indoor( 0x06B0B200 ); // 	アクション実行
	}
	
	// ---------------------------------------------------------------
	// 斧を壊す
	// ---------------------------------------------------------------
	void Action25( void )
	{
		set_action_32_not_indoor( 0x06555B00 ); // 	アクション実行
	}
	
	// ---------------------------------------------------------------
	// 唾を吐く
	// ---------------------------------------------------------------
	void Action26( void )
	{
		set_action_32_not_indoor( 0x0606CF00 ); // 	アクション実行
	}
	
	// ---------------------------------------------------------------
	// 叩かれる
	// ---------------------------------------------------------------
	void Action27( void )
	{
		set_action_32_not_indoor( 0x9C9D9C00 ); // 	アクション実行
	}
	
	
	// ---------------------------------------------------------------
	// 変な歩き方
	// ---------------------------------------------------------------
	void Action28( void )
	{
		set_action_32_not_indoor( 0x027600BB ); // 	アクション実行
	}
	
	
	// ---------------------------------------------------------------
	// 連続アクション
	// ---------------------------------------------------------------
	void Action29( void )
	{
		set_action_32_not_indoor( 0x7C7B7C00 ); // 	アクション実行
	}
	
	
	// ---------------------------------------------------------------
	// 顔を初期設定
	// ---------------------------------------------------------------
	void Action30( void )
	{
		set_action_32_not_indoor( 0x0616B900 ); // 	アクション実行
	}
	
	
	// アクション一覧
	const std::vector<std::string> actions =
	{
		"0 気絶",
		"1 前転",
		"2 尻もち",
		"3 泳ぐ",
		"4 受け取る",
		"5 よろける",
		"6 空気椅子",
		"7 斧を壊す",
		"8 唾を吐く",
		"9 叩かれる",
		"10 ウィンドウ",
		"11 綿毛を吹く",
		"12 クラゲ回避",
		"13 赤バラ表示",
		"14 頭がピッカーん",
		"15 釣り竿を引き戻す",
		"16 地中深くまで沈む",
		"17 アイテムを捕まえた",
		"18 リアクション四連発",
		"19 止まると動きがフリーズ",
		"20 黒くなって地面から出る",
		"21 かっぺいのボートに立って乗る",
	};
	
	
	void Action(MenuEntry *e)
	{
		// 実行
		if ( e->Hotkeys[0].IsDown() )
		{
			switch ( action_number )
			{
				case  0: { Action14(); break; }
				case  1: { Action2(); break; }
				case  2: { Action3(); break; }
				case  3: { Action18(); break; }
				case  4: { Action15(); break; }
				case  5: { Action23(); break; }
				case  6: { Action1(); break; }
				case  7: { Action25(); break; }
				case  8: { Action26(); break; }
				case  9: { Action27(); break; }
				case 10: { Action19(); break; }
				case 11: { Action9(); break; }
				case 12: { Action6(); break; }
				case 13: { Action8(); break; }
				case 14: { Action10(); break; }
				case 15: { Action24(); break; }
				case 16: { Action20(); break; }
				case 17: { Action5(); break; }
				case 18: { Action7(); break; }
				case 19: { Action22(); break; }
				case 20: { Action4(); break; }
				case 21: { Action12(); break; }
				
			}
		}
		
		// 停止
		if ( e->Hotkeys[1].IsDown() )
		{
			switch( action_number )
			{
				
				default:
				{
					//Process::Write32(0x33099fe4 + get12c(), 0x60d0600);
					Process::Write8(0x33099fe5 + get12c(), 0);
					break;
				}
				
			}
		}
	}
	
	void Action_n(MenuEntry *e)
	{
		for ( int i = 0; i < actions.size(); i++ )
			if ( (int)(e->GetArg()) == i ) action_number = i;
	}
	
	
	
}

